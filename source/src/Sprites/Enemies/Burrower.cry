
class EnemyBurrow : Sprite {
	
	constructor(x, y) : base(x, y) {
		this.width = 20
		this.height = 15
		this.left_facing = true;
		this.state_counter = floor((7 * x / 16.0) % 60);
		this.state = floor((x / 16) % 2) == 0
			? 'out'
			: 'burrowed'; // TODO: change to enums
	}
		
	function draw(surface, is_moving, counter, camera_offset) {
		
		direction = this.left_facing ? 'Left' : 'Right';
		
		num = 1
		
		switch (this.state) {
			case 'rising':
			case 'burrowing':
				num = max(0, min(this.state_counter / 4, 2));
				if this.state == 'burrowing':
					num = 2 - num;
				num += 2;
				break;
				
			case 'out':
				num = 4;
				break;
				
			case 'shoot':
				num = 5;
				break;
		}
		
		file = direction + num + '.png';
		
		img = images.Get('sprites/Enemies/Burrower/' + file);
		
		xy = this.get_top_left();
		x = xy[0] - camera_offset[0];
		y = xy[1] - camera_offset[1];
		
		img.blit(x, y);
	}
	
	function update(playScene) {
		this.lifetime++;
		this.state_counter++;
		
		this.left_facing = playScene.player.x < this.x;
		
		switch (this.state) {
			case 'burrowed':
				if (this.state_counter == 60) {
					this.state_counter = 0;
					this.state = 'rising';
				}
				break;
				
			case 'rising':
				if (this.state_counter == 12) {
					this.state_counter = 0;
					this.state = 'out';
				}
				break;
			
			case 'burrowing':
				if (this.state_counter == 12) {
					this.state_counter = 0;
					this.state = 'burrowed';
				}
				break;
			
			case 'out':
				if (this.state_counter == 60) {
					this.state_counter = 0;
					this.state = 'shoot';
				}
				break;
			
			case 'shoot':
				if (this.state_counter == 3) {
					playScene.enemies.add(new EnemyBurrowerBullet(this.x, this.y + 4, this.left_facing ? -2 : 2));
				}
					
				if (this.state_counter == 20) {
					this.state_counter = 0;
					this.state = 'burrowing';
				}
				break;
				
			default:
				Core.assert(false);
				break;
		}
	}
}
